import { serve } from "https://deno.land/std@0.168.0/http/server.ts"
import { createClient } from 'https://esm.sh/@supabase/supabase-js@2'
import { corsHeaders, createErrorResponse, createSuccessResponse, buildClaudePrompt } from '../shared/utils.ts'
import { CardGenerationResponse } from '../shared/types.ts'

interface ClaudeApiRequest {
  sectionId: number
  sectionTitle: string
  sectionContent: string
  existingCards?: any[]
  batchNumber?: number
  totalBatches?: number
}

serve(async (req) => {
  // Handle CORS preflight requests
  if (req.method === 'OPTIONS') {
    return new Response('ok', { headers: corsHeaders })
  }

  try {
    const { sectionId, sectionTitle, sectionContent, existingCards, batchNumber, totalBatches }: ClaudeApiRequest = await req.json()

    if (!sectionId || !sectionTitle || !sectionContent) {
      return createErrorResponse('Missing required fields', 400)
    }

    // Build the prompt for Claude
    const prompt = buildClaudePrompt(sectionTitle, sectionContent, sectionId, existingCards, batchNumber, totalBatches)

    // TODO: Replace with actual Claude API call
    // For now, return mock data
    // debug removed
    
    // Simulate API delay
    await new Promise(resolve => setTimeout(resolve, 2000))
    
    // Mock response - replace with actual Claude API response
    const claudeResponse: CardGenerationResponse = {
      cards: [
        {
          title: "Sample Card 1",
          description: "This is a sample card description",
          prompt: "Sample content for the card",
          order: 1,
          card_idea: "Sample additional context",
          banner: ""
        },
        {
          title: "Sample Card 2", 
          description: "Another sample card description",
          prompt: "More sample content",
          order: 2,
          card_idea: "",
          banner: ""
        }
      ],
      snippetChunks: [
        {
          card_id: 0,
          source_section_id: 0, // Will be set by caller
          source_snippet_id: null,
          link: null
        },
        {
          card_id: 1,
          source_section_id: 0, // Will be set by caller
          source_snippet_id: null,
          link: null
        }
      ]
    }

    return createSuccessResponse(claudeResponse, 'Cards generated by Claude')

  } catch (error) {
    console.error('Error in claude-api function:', error)
    return createErrorResponse('Internal server error')
  }
}) 